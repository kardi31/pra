<?php

/**
 * Staff_Model_Doctrine_BaseUpdateMerge
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $request_id
 * @property integer $merge_from_staff_id
 * @property integer $merge_to_staff_id
 * @property Staff_Model_Doctrine_UpdateRequest $Request
 * @property Staff_Model_Doctrine_Staff $MergeFromStaff
 * 
 * @package    Admi
 * @subpackage Staff
 * @author     MichaÅ‚ Folga <michalfolga@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Staff_Model_Doctrine_BaseUpdateMerge extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('staff_update_merge');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('request_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('merge_from_staff_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('merge_to_staff_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Staff_Model_Doctrine_UpdateRequest as Request', array(
             'local' => 'request_id',
             'foreign' => 'id'));

        $this->hasOne('Staff_Model_Doctrine_Staff as MergeFromStaff', array(
             'local' => 'merge_from_staff_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}