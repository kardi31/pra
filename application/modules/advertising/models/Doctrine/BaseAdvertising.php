<?php

/**
 * Advertising_Model_Doctrine_BaseAdvertising
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $position_id
 * @property timestamp $date_added
 * @property string $ad_type
 * @property string $source
 * @property integer $size_id
 * @property string $alt_text
 * @property string $ad_link
 * @property boolean $active
 * @property timestamp $date_from
 * @property boolean $is_sponsored
 * @property integer $clicks
 * @property boolean $archived
 * @property Doctrine_Collection $Pages
 * @property Advertising_Model_Doctrine_Size $Size
 * @property Advertising_Model_Doctrine_Branch $Branches
 * @property Advertising_Model_Doctrine_Agent $Agent
 * @property Advertising_Model_Doctrine_City $Cities
 * 
 * @package    Admi
 * @subpackage Advertising
 * @author     MichaÅ‚ Folga <michalfolga@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Advertising_Model_Doctrine_BaseAdvertising extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('advertising_advertising');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('position_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('date_added', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('ad_type', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('source', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('size_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('alt_text', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('ad_link', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
        $this->hasColumn('date_from', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('is_sponsored', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('clicks', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('archived', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Advertising_Model_Doctrine_Page as Pages', array(
             'refClass' => 'Advertising_Model_Doctrine_AdvertisingPage',
             'local' => 'ad_id',
             'foreign' => 'page_id'));

        $this->hasOne('Advertising_Model_Doctrine_Size as Size', array(
             'local' => 'size_id',
             'foreign' => 'id'));

        $this->hasOne('Advertising_Model_Doctrine_Branch as Branches', array(
             'local' => 'id',
             'foreign' => 'ad_id'));

        $this->hasOne('Advertising_Model_Doctrine_Agent as Agent', array(
             'local' => 'id',
             'foreign' => 'ad_id'));

        $this->hasOne('Advertising_Model_Doctrine_City as Cities', array(
             'local' => 'id',
             'foreign' => 'ad_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}