<?php

/**
 * Supplier_Model_Doctrine_BaseReview
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $supplier_id
 * @property string $name
 * @property string $heading
 * @property clob $review
 * @property integer $overall_rating
 * @property integer $value
 * @property integer $service
 * @property integer $quality
 * @property boolean $will_return
 * @property string $what_supplier_did
 * @property boolean $view
 * @property string $email
 * @property string $activation_link
 * @property boolean $approved
 * @property string $ip
 * @property string $hostname
 * @property boolean $email_confirmed
 * @property boolean $reminder
 * @property string $activation_ip
 * @property string $activation_hostname
 * @property string $position
 * @property string $company
 * @property string $letorsale
 * @property string $sale
 * @property string $staff1
 * @property string $staff2
 * @property Supplier_Model_Doctrine_Supplier $Supplier
 * @property Doctrine_Collection $Comments
 * 
 * @package    Admi
 * @subpackage Supplier
 * @author     MichaÅ‚ Folga <michalfolga@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Supplier_Model_Doctrine_BaseReview extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('supplier_review');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('supplier_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('heading', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('review', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('overall_rating', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('value', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('service', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('quality', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('will_return', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('what_supplier_did', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('view', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('activation_link', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('approved', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('ip', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('hostname', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('email_confirmed', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('reminder', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('activation_ip', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('activation_hostname', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('position', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('company', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('letorsale', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('sale', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('staff1', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('staff2', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Supplier_Model_Doctrine_Supplier as Supplier', array(
             'local' => 'supplier_id',
             'foreign' => 'id'));

        $this->hasMany('Supplier_Model_Doctrine_Comment as Comments', array(
             'local' => 'id',
             'foreign' => 'review_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}