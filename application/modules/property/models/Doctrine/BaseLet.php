<?php

/**
 * Property_Model_Doctrine_BaseLet
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $property_id
 * @property timestamp $date_available
 * @property integer $bond
 * @property integer $type_id
 * @property integer $furn_id
 * @property integer $rent_frequency
 * @property integer $contract_in_months
 * @property boolean $washing_machine
 * @property boolean $dishwasher
 * @property boolean $burglar_alarm
 * @property boolean $bill_inc_water
 * @property boolean $bill_inc_gas
 * @property boolean $bill_inc_electricity
 * @property boolean $bill_inc_tv_licence
 * @property boolean $bill_inc_tv_subscription
 * @property boolean $bill_inc_internet
 * @property Property_Model_Doctrine_Property $Property
 * 
 * @package    Admi
 * @subpackage Property
 * @author     MichaÅ‚ Folga <michalfolga@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Property_Model_Doctrine_BaseLet extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('property_let');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('property_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('date_available', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('bond', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('type_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('furn_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('rent_frequency', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('contract_in_months', 'integer', 4, array(
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('washing_machine', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('dishwasher', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('burglar_alarm', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('bill_inc_water', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('bill_inc_gas', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('bill_inc_electricity', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('bill_inc_tv_licence', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('bill_inc_tv_subscription', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('bill_inc_internet', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Property_Model_Doctrine_Property as Property', array(
             'local' => 'property_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}